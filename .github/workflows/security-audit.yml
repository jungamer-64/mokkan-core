name: Security Audit

on:
  push:
    branches: [ master ]   # ← リポの既定ブランチに合わせて
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0'    # ← UTC。JST 深夜なら調整を

jobs:
  cargo-audit:
    name: Cargo Audit
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup Rust toolchain
        # 推奨: dtolnay/rust-toolchain に移行
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921
        with:
          toolchain: stable
          components: ""   # 明示的に不要なら空

      - name: Cache cargo registry & git
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache advisory DB
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.cargo/advisory-db
          key: ${{ runner.os }}-rustsec-db

      - name: Cache cargo-audit binary
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-audit-bin-v0.20.0

      - name: Ensure lockfile (for library crates)
        run: test -f Cargo.lock || cargo generate-lockfile

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked --version 0.20.0

      - name: Run cargo audit
        run: |
          set -o pipefail
          cargo audit --json | tee audit.json

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: cargo-audit-report
          path: audit.json
          if-no-files-found: ignore
